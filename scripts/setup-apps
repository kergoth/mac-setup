#!/bin/sh

locate_app() {
    mdfind "kMDItemContentType == 'com.apple.application-bundle' && kMDItemDisplayName == '${*%.app}'cd"
}

locate_app_by_id() {
    mdfind -onlyin /Applications "kMDItemContentType == 'com.apple.application-bundle' && kMDItemCFBundleIdentifier == '$*'"
}

app_installed() {
    test -n "$(locate_app_by_id "$*")"
}

app_path() {
    for dir in /Applications ~/Applications /Applications/Utility ~/Applications/Utility; do
        if [ -d "$dir/$1.app" ]; then
            echo "$dir/$1.app"
            return 0
        fi
    done
    return 1
}

app_installed_directly() {
    app_path "$1" >/dev/null
}

duti_all() {
    if app_installed_directly "$1"; then
        duti-all "$1"
    fi
}

ext_to_uti() {
    duti -e "$*" | sed -ne 's/^identifier: //p'
}

add_login() {
    osascript -e "tell application \"System Events\" to make login item at end with properties {path:\"$1\", hidden:false}"
}

# Use Alfred. FIXME: alter the alfred shortcut?
# Change Spotlight keyboard shortcut from cmd-space to option-space
# defaults write com.apple.symbolichotkeys.plist AppleSymbolicHotKeys -dict-add 64 "
#   <dict>
#     <key>enabled</key><false/>
#     <key>value</key><dict>
#       <key>type</key><string>standard</string>
#       <key>parameters</key>
#       <array>
#         <integer>32</integer>
#         <integer>49</integer>
#         <integer>524288</integer>
#       </array>
#     </dict>
#   </dict>
# "

# duti -vs com.googlecode.iterm2 public.unix-executable shell
if app_installed_directly "Path Finder"; then
    duti -vs com.cocoatech.PathFinder public.folder viewer
fi
if app_installed_directly "Send to Kindle"; then
    duti -vs com.amazon.SendToKindle .mobi viewer
    duti -vs com.amazon.SendToKindle .azw viewer
fi

# Switch these associations from Archive Utility to The Unarchiver
duti-all -n "/System/Library/CoreServices/Applications/Archive Utility.app" \
    | sed 's/com\.apple\.archiveutility/cx\.c3\.theunarchiver/; s/-s/-vs/;' \
    | tr '\n' '\0' | xargs -0 -n 1 -I"{}" sh -c "{}"

# FIXME: add VLC associations
# TODO: PopClip, Paste and Hidden Bar needed me to check a box to enable start at login, the others did not.
if app_installed_directly Paste; then
    add_login ~/Library/Application\ Support/Paste\ Helper/Paste\ Helper.app
fi

# Open these apps so they set up auto-start for themselves
while read -r app; do
    if app_installed_directly "$app"; then
        open -ga "$app"
    fi
done <<END
1Password 7
Alfred 4
Hidden Bar
Karabiner-Elements
Magnet
OverSight
ReiKey
END

while read -r app; do
    app_file_path="$(app_path "$app")"
    if [ $? -eq 0 ]; then
        add_login "$app_file_path"
        open -ga "$app"
    fi
done <<END
BlockBlock Helper
coconutBattery
PopClip
Syncthing
UnPlugged
WiFi Signal
END

appcleaner="$(app_path "AppCleaner")"
if [ $? -eq 0 ]; then
    open -g "$appcleaner/Contents/Library/LoginItems/AppCleaner SmartDelete.app"
fi

ccc="$(app_path "Carbon Copy Cloner")"
if [ $? -eq 0 ]; then
    open -g "$ccc/Contents/Library/LoginItems/CCC User Agent.app"
fi

oversight="$(app_path "OverSight")"
if [ $? -eq 0 ]; then
    add_login "$oversight/Contents/Library/LoginItems/OverSight Helper.app"
    mkdir -p ~/Library/Application\ Support/Objective-See/OverSight
    touch ~/Library/Application\ Support/Objective-See/OverSight/OverSight.log
fi

# Reload the Quick Look generators list
qlmanage -r
